#!/opt/common/CentOS_6-dev/python/python-2.7.10/bin/python

import argparse

import cmo

# Example Usage:
#
# java -jar ${fgbio_jar} --tmp-dir=${scratch_dir} GroupReadsByUmi
# -s 'paired'
# -m 20
# -f ${output_folder}/Grouped-mapQ20-histogram
# -i ${output_folder}/sample_with_UMI_sorted_mateFixed.bam
# -o ${output_folder}/collapsed-sample_with_UMI_sorted_mateFixed_paired_mapQ20.bam

if __name__ =='__main__':
    parser = argparse.ArgumentParser(description="Run Fulcrum (GroupReadsByUmi)", add_help=False)
    fulcrum = cmo.util.programs['fulcrum']['default']
    java = cmo.util.programs['java']['jdk1.8.0_25']

    parser.add_argument("-sd", "--tmp_dir", help="", required = True)
    parser.add_argument("-s", "--strategy", help="", required = True)
    parser.add_argument("-m", "--min_mapping_quality", help="", required = True)
    parser.add_argument("-f", "--tag_family_size_counts_outpu", help="", required = True)
    parser.add_argument("-i", "--input_bam", help="", required = True)
    parser.add_argument("-o", "--output_bam_filename", help="", required = True)

    (args, unknowns) = parser.parse_known_args()

    cmd = [java, "-server -Xms8g -Xmx8g -jar", fulcrum]
    cmd = " ".join(cmd)
    cmd = "{} --tmp-dir={} GroupReadsByUmi -s {} -m {} -f {} -i {} -o {}".format(cmd, args.tmp_dir,
                                                                    args.strategy, args.min_mapping_quality,
                                                                    args.tag_family_size_counts_outpu, args.input_bam,
                                                                    args.output_bam_filename)

    cmo.util.call_cmd(cmd, shell=True)
